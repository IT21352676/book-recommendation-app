{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIRUSHA\\\\book-recommendation-app\\\\frontend\\\\src\\\\components\\\\pages\\\\ReviewPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button, List, ListItem, ListItemText, Paper } from '@mui/material';\nimport { getReviews, addReview, deleteReview } from './api'; // Adjust import paths as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewPage = ({\n  bookId\n}) => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [rating, setRating] = useState('');\n  const [comment, setComment] = useState('');\n  const [userId] = useState(''); // Replace with actual user ID from context or props\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await getReviews(bookId);\n        setReviews(response.data);\n      } catch (error) {\n        console.error('Failed to fetch reviews:', error);\n      }\n    };\n    fetchReviews();\n  }, [bookId]);\n  const handleAddReview = async () => {\n    if (!rating || !comment) {\n      alert('Please enter both rating and comment.');\n      return;\n    }\n    try {\n      const newReview = {\n        rating: parseInt(rating),\n        comment,\n        userId\n      };\n      await addReview(bookId, newReview); // Check if bookId is defined\n      setRating('');\n      setComment('');\n      // Refetch reviews after adding a new one\n      const response = await getReviews(bookId);\n      setReviews(response.data);\n    } catch (error) {\n      console.error('Failed to add review:', error);\n    }\n  };\n  const handleDeleteReview = async reviewId => {\n    try {\n      await deleteReview(reviewId);\n      setReviews(reviews.filter(review => review._id !== reviewId));\n    } catch (error) {\n      console.error('Failed to delete review:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Book Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Rating\",\n        type: \"number\",\n        value: rating,\n        onChange: e => setRating(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Comment\",\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        fullWidth: true,\n        multiline: true,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddReview,\n        style: {\n          marginTop: 16\n        },\n        children: \"Add Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Rating: ${review.rating}`,\n          secondary: review.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"error\",\n          onClick: () => handleDeleteReview(review._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, review._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewPage, \"lNXqU92PQwFejt261RA40AJIyxk=\");\n_c = ReviewPage;\nexport default ReviewPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Button","List","ListItem","ListItemText","Paper","getReviews","addReview","deleteReview","jsxDEV","_jsxDEV","ReviewPage","bookId","_s","reviews","setReviews","rating","setRating","comment","setComment","userId","fetchReviews","response","data","error","console","handleAddReview","alert","newReview","parseInt","handleDeleteReview","reviewId","filter","review","_id","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","label","type","value","onChange","e","target","fullWidth","multiline","rows","color","onClick","marginTop","map","primary","secondary","_c","$RefreshReg$"],"sources":["C:/Users/HIRUSHA/book-recommendation-app/frontend/src/components/pages/ReviewPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Typography, TextField, Button, List, ListItem, ListItemText, Paper } from '@mui/material';\r\nimport { getReviews, addReview, deleteReview } from './api'; // Adjust import paths as needed\r\n\r\nconst ReviewPage = ({ bookId }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [rating, setRating] = useState('');\r\n  const [comment, setComment] = useState('');\r\n  const [userId] = useState(''); // Replace with actual user ID from context or props\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await getReviews(bookId);\r\n        setReviews(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch reviews:', error);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [bookId]);\r\n\r\n  const handleAddReview = async () => {\r\n    if (!rating || !comment) {\r\n      alert('Please enter both rating and comment.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const newReview = { rating: parseInt(rating), comment, userId };\r\n      await addReview(bookId, newReview); // Check if bookId is defined\r\n      setRating('');\r\n      setComment('');\r\n      // Refetch reviews after adding a new one\r\n      const response = await getReviews(bookId);\r\n      setReviews(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to add review:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteReview = async (reviewId) => {\r\n    try {\r\n      await deleteReview(reviewId);\r\n      setReviews(reviews.filter(review => review._id !== reviewId));\r\n    } catch (error) {\r\n      console.error('Failed to delete review:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom>Book Reviews</Typography>\r\n      <Paper style={{ padding: 16 }}>\r\n        <TextField\r\n          label=\"Rating\"\r\n          type=\"number\"\r\n          value={rating}\r\n          onChange={(e) => setRating(e.target.value)}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Comment\"\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleAddReview}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          Add Review\r\n        </Button>\r\n      </Paper>\r\n      <List>\r\n        {reviews.map(review => (\r\n          <ListItem key={review._id}>\r\n            <ListItemText\r\n              primary={`Rating: ${review.rating}`}\r\n              secondary={review.comment}\r\n            />\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={() => handleDeleteReview(review._id)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}